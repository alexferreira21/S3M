<?xml version="1.0" encoding="utf-8"?>
<s:Panel xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"  xmlns:maps="com.google.maps.*">
	<s:layout>
		<s:VerticalLayout/>
	</s:layout>
	
	<fx:Metadata>
		[Event(name="mapaPronto", type="mygoogle.events.MapaEvent")]
		[Event(name="mapaPreInicializacao", type="mygoogle.events.MapaEvent")]
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			import com.google.maps.LatLng;
			import com.google.maps.MapEvent;
			import com.google.maps.MapMouseEvent;
			import com.google.maps.MapOptions;
			
			import controller.EstradaController;
			import controller.PortalController;
			
			import entity.Estrada;
			import entity.Portal;
			
			import model.BaseModel;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.core.EventPriority;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import mygoogle.events.MapaEvent;
			import mygoogle.events.MarkerPortalEvent;
			
			[Bindable]
			private var portalController:PortalController = PortalController.getInstance();  
			
			[Bindable]
			private var estradaController: EstradaController = new EstradaController();
			
			public var markers: ArrayCollection = BaseModel.getInstance().markers;
			
			protected var centroDoMapa: LatLng = new LatLng(-22.931606,-43.980210); 
			
			
			
			protected function onMouseMove(event:MapMouseEvent):void
			{
				coord.text=event.latLng.toString();
				
			}
			
			protected function mapReady(event:MapEvent):void
			{
				map.addEventListener(MapMouseEvent.MOUSE_MOVE,onMouseMove, false, EventPriority.DEFAULT, true);	
				
				map.enableScrollWheelZoom();
				map.enableContinuousZoom();
				
				atualizarMapa();
			}
			
			public function atualizarMapa():void
			{
				map.clearOverlays();
				portalController.carregarPortais(carregarPortaisSucesso,carregarPortaisFalha);
				estradaController.carregarEstradas(carregarEstradasSucesso,carregarEstradasFalha);
			}
			
			private function carregarEstradasSucesso(event : ResultEvent) : void 
			{
				cursorManager.removeBusyCursor();
				
				estradaController.estradas.removeAll();
				estradaController.estradas.addAll(ArrayCollection(event.result));
				
				for each (var estradaItem: Estrada in estradaController.estradas)
				{
					map.addOverlay(estradaItem.polyline);
				}
			}
			
			private function carregarEstradasFalha(event : FaultEvent) : void 
			{
				cursorManager.removeBusyCursor();
				Alert.show(event.fault.message);
			}
			
			protected function mapPreInitialize(event:MapEvent):void
			{
				var mapOpt:MapOptions = new MapOptions();
				mapOpt.center = centroDoMapa;
				mapOpt.zoom = 17;
				
				map.setInitOptions(mapOpt);		
				
				var mapaPreInicializacao: MapaEvent = new MapaEvent(MapaEvent.MAPA_PRE_INICIALIZACAO,true);
				dispatchEvent(mapaPreInicializacao);
			}
			
			
			private function carregarPortaisSucesso(event : ResultEvent) : void 
			{
				portalController.portais.removeAll();
				portalController.portais.addAll(ArrayCollection(event.result));
				
				if(portalController.portais.length > 0)
				{
					for each(var itemPortal:Portal in  portalController.portais)
					{
						adicionarMarkerPortal(itemPortal);
					}
				}
				
				cursorManager.removeBusyCursor();
				
				var mapaPronto: MapaEvent = new MapaEvent(MapaEvent.MAPA_PRONTO,true);
				dispatchEvent(mapaPronto);
			}
			
			private function carregarPortaisFalha(event : FaultEvent) : void 
			{
				cursorManager.removeBusyCursor();
				Alert.show(event.fault.message);
			}
			
			public function adicionarMarkerPortal(portal: Portal):MarkerPortal
			{
				var markerPortal:MarkerPortal = new MarkerPortal(portal);
				markers.addItem(markerPortal);
				map.addOverlay(markerPortal);
				
				return markerPortal;
			}
			
			public function removerMarkerPortal(portal: Portal):void
			{
				for each (var markerPortalItem: MarkerPortal in markers)
				{
					if(markerPortalItem.portal.latLng.equals(portal.latLng))
					{
						map.removeOverlay(markerPortalItem);
					}
				}
			}
			
			
		]]>
	</fx:Script>
	
	
	
	
	
	<maps:Map id="map" key="ABQIAAAAZ9oqf5htR5ZejKNOkwMwnhT2yXp_ZAY8_ufC3CFXhHIE1NvwkxQ399ITKTsfZd1X0vRy7q_T9pCSLQ" sensor="false"
			  width="100%" height="100%" mapevent_mapready="mapReady(event)" mapevent_mappreinitialize="mapPreInitialize(event)"
			  />
	
	<mx:Label id="coord" text=""/>
	
	
	
</s:Panel>
