<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"  height="100%" width="100%" xmlns:mygoogle="mygoogle.*" xmlns:view="view.*" xmlns:local="*" xmlns:component="component.*">
	
	<fx:Metadata>
		[Event(name="voltarEvent", type="flash.events.Event")]
	</fx:Metadata>
	
	
	<fx:Script>
		<![CDATA[
			import com.google.maps.MapMouseEvent;
			
			import controller.PortalController;
			
			import entity.Equipamento;
			import entity.Municipio;
			import entity.Portal;
			import entity.UF;
			
			import events.CoordenadaEvent;
			import events.EquipamentoEvent;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.core.EventPriority;
			import mx.core.INavigatorContent;
			import mx.events.CloseEvent;
			import mx.events.ListEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import mygoogle.MarkerPortal;
			import mygoogle.events.MapaEvent;
			import mygoogle.events.MarkerPortalEvent;
			
			import util.AlertUtil;
			import util.SentidoEnum;
			
			[Bindable]
			private var portalController: PortalController = PortalController.getInstance(); //FAZER UMA INTERFACE CONTROLLER;
			private var emEdicao: Boolean = false;
			private var _markerSelecionado: MarkerPortal;
			
			
			
			protected function mapaProntoHandler(event:MapaEvent):void
			{
				dgPortais.addEventListener("removerItem",confirmacaoRemoverPortal);
				//dgEquipamentos.addEventListener("removerEquipamento",);
				
				mapa.map.addEventListener(MapMouseEvent.CLICK,criarPortal, false, EventPriority.DEFAULT, true);
				
				for each (var markerPortalItem: MarkerPortal in mapa.markers)
				{
					markerPortalItem.addEventListener(MarkerPortalEvent.PORTAL_CLICK,selecionarMarkerPortal);
				}
			}
			
			private function confirmacaoRemoverPortal(event: Event):void
			{
				
				AlertUtil.criarJanelaConfirmacao("Tem certeza de que deseja remover este portal?","Remover Portal",this,removerPortal);
			}
			
			protected function removerPortal(event:CloseEvent):void
			{
				if (event.detail==Alert.NO)
				{
					return;
				}	
				
				var portal:Portal = Portal(dgPortais.selectedItem);
				
				portalController.removerPortal(portal,removerPortalSucesso,removerPortalFalha);
			}
			
			private function selecionarMarkerPortal(event: MarkerPortalEvent):void
			{
				
				var markerPortalSelecionado: MarkerPortal = event.markerPortal;
				setMarkerSelecionado(markerPortalSelecionado);
				
				for each(var portalItem: Portal in dgPortais.dataProvider)
				{
					if(portalItem.latLng.equals(markerPortalSelecionado.portal.latLng))
					{
						dgPortais.selectedItem = portalItem;
					}
				} 
				
			} 
			
			protected function selecionarPortalNoDatagrid(event:ListEvent):void
			{
				var portalSelecionado: Portal = Portal(ArrayCollection(dgPortais.dataProvider).getItemAt(event.rowIndex));
				
				for each(var markerPortalItem :MarkerPortal in mapa.markers)
				{
					if(markerPortalItem.portal.latLng.equals(portalSelecionado.latLng))
					{
						setMarkerSelecionado(markerPortalItem);
					}
				}
			}
			
			private function setMarkerSelecionado(value: MarkerPortal):void
			{
				if(_markerSelecionado != null)
				{
					_markerSelecionado.isSelected = false;
				}	
				
				_markerSelecionado = value;
				
				if(value != null)
				{
					_markerSelecionado.isSelected = true;
				}
			}
			
			
			
			protected function criarPortal(event:MapMouseEvent):void
			{
				setMarkerSelecionado(null);
				
				if(emEdicao)
				{
					portalController.portalEmEdicao = new Portal();
					portalController.portalEmEdicao.equipamento = new ArrayCollection();
					portalController.portalEmEdicao.latLng = event.latLng;
					var novoMarkerPortal:MarkerPortal = mapa.adicionarMarkerPortal(portalController.portalEmEdicao);
					novoMarkerPortal.addEventListener(MarkerPortalEvent.PORTAL_CLICK,selecionarMarkerPortal);
					portalController.geocodificar(event.latLng.toString(),sucessoGeocodificacao,falhaGeocodificacao);
					
					vsPortal.selectedChild = edicao;	
					emEdicao = false;
				}
				
			}
			
			protected function sucessoGeocodificacao(event: ResultEvent):void
			{
				var ufRetornada: UF = UF(event.result);
				portalController.portalEmEdicao.municipio.uf = ufRetornada;
				
				if(ufRetornada != null)
				{
					for each(var ufItem:UF in cbUF.dataProvider)
					{
						if(ufItem.idUF ==  ufRetornada.idUF)
						{
							cbUF.selectedItem = ufItem;
							break;
						}
					}
				}
			}
			
			protected function falhaGeocodificacao(event :FaultEvent):void
			{
				Alert.show(event.fault.message);
			}
			
			
			private function removerPortalSucesso(event: ResultEvent):void
			{
				var portalExcluido: Portal = Portal(event.result);
				var dp: ArrayCollection = ArrayCollection(dgPortais.dataProvider);
				
				for each (var portalItem: Portal in dp)
				{
					if(portalItem.idPortal == portalExcluido.idPortal)
					{
						dp.removeItemAt(dp.getItemIndex(portalItem));
					}
					
				}
				
				mapa.removerMarkerPortal(portalExcluido);
			}
			
			private function removerPortalFalha(event: FaultEvent):void
			{
				
				Alert.show(event.fault.message);
			}
			
			
			protected function sairEdicao():void
			{
				
				portalController.portalEmEdicao = null;
				emEdicao = false;
				vsPortal.selectedChild = exibicao;
			}
			
			protected function cancelarEdicao():void
			{
				if(isNaN(portalController.portalEmEdicao.idPortal)){
					mapa.removerMarkerPortal(portalController.portalEmEdicao);
				}
				sairEdicao();
			}
			
			
			
			protected function salvarEdicao(event:MouseEvent):void
			{
				portalController.portalEmEdicao.nome = tiNome.text;
				portalController.portalEmEdicao.altitude = parseFloat(tiAltitude.text);
				
				//if(portalController.portalEmEdicao.municipio == null) //CRIAR VARIÁVEL 'ALTEROU_MUNICIPIO' NO CHANGE DA COMBO/TEXT_INPUT DO MUNICIPIO
				//{
				var municipio:Municipio = new Municipio();
				municipio.nome = tiMunicipio.text;
				municipio.uf = cbUF.selectedItem;
				portalController.portalEmEdicao.municipio = municipio;
				
				//}
				portalController.salvarPortal();
				sairEdicao();
			}
			
			protected function novoEquipamento(event:MouseEvent):void
			{
				edicaoEquipamento.novoEquipamento(portalController.portalEmEdicao);
				vsPortal.selectedChild = equipamento;	
			}
			
			protected function removerEquipamento(event:MouseEvent):void
			{
				Alert.show(dgEquipamentos.selectedIndex.toString());	
			}
			
			
			protected function itemDoubleClickHandler(event:ListEvent):void
			{
				var portalSelecionado: Portal = Portal(ArrayCollection(dgPortais.dataProvider).getItemAt(event.rowIndex));
				mapa.map.setCenter(portalSelecionado.latLng);
			}
			
			protected function centralizarMapa(event:CoordenadaEvent):void
			{
				mapa.map.setCenter(event.latLng);				
			}
			
			protected function adicionarEquipamento(event:EquipamentoEvent):void
			{
				portalController.portalEmEdicao.equipamento.addItem(event.equipamento);		
				vsPortal.selectedChild = edicao;
			}
			
			protected function voltarParaMenu(event:MouseEvent):void
			{
				sairEdicao();
				dispatchEvent(new Event('voltarEvent'));
			}
			
			protected function novoPortal(event:MouseEvent):void
			{
				emEdicao = true;
				vsPortal.selectedChild = ncNovoPortal;	
			}
			
			protected function cancelarNovoPortal(event:MouseEvent):void
			{
				sairEdicao();
			}
			
			protected function cancelarEdicaoEquipamento(event:Event):void
			{
				vsPortal.selectedChild = edicao;			
			}
			
		]]>
	</fx:Script>
	
	
	<mx:VDividedBox height="100%" width="100%">
		
		<mygoogle:Mapa id="mapa"  mapaPronto="mapaProntoHandler(event)" height="80%" width="100%" />
		
		<mx:ViewStack id="vsPortal" height="20%" width="100%" resizeEffect="Resize" creationPolicy="all">
			
			<s:NavigatorContent id="exibicao">
				<s:HGroup id="parteDeBaixo" height="100%" width="100%">
					
					<component:LocalizarCoordenada novaCoordenada="centralizarMapa(event)"/>
					
					<s:Spacer width="80"/> 
					
					<mx:DataGrid id="dgPortais"  doubleClickEnabled="true" dataProvider="{portalController.portais}"
								 height="100%" width="100%" itemClick="selecionarPortalNoDatagrid(event)" 
								 itemDoubleClick="itemDoubleClickHandler(event)">
						<mx:columns>
							<mx:DataGridColumn dataField="nome" headerText="Nome" width="200"/>
							<mx:DataGridColumn dataField="latitude" headerText="Latitude" width="150"/>
							<mx:DataGridColumn dataField="longitude" headerText="Longitude" width="150"/>	
							<mx:DataGridColumn dataField="altitude" headerText="Altitude" width="50"/>	
							<mx:DataGridColumn dataField="municipio.nome" headerText="Municipio" width="150"/>	
							<mx:DataGridColumn dataField="municipio.uf.sigla" headerText="UF" width="50"/>	
							<mx:DataGridColumn dataField="equipamento.length" headerText="Equipamentos" width="100"/>	
							<mx:DataGridColumn headerText="Ações" width="50">
								<mx:itemRenderer>
									<fx:Component>
										<mx:HBox paddingLeft="5">
											<s:Image   source="@Embed('assets/excluirIcon.png')"  click="dispatchEvent(new Event('removerItem', true))"/>
										</mx:HBox>
									</fx:Component>
								</mx:itemRenderer>
							</mx:DataGridColumn>
						</mx:columns>
					</mx:DataGrid>
					
					<s:VGroup>
						<s:Button id="btNovoPortal" label="AdicionarPortal" click="novoPortal(event)"/>
						<s:Button id="btVoltar" label="Voltar" click="voltarParaMenu(event)"/>
					</s:VGroup>
				</s:HGroup>
			</s:NavigatorContent>
			
			<s:NavigatorContent id="edicao" height="100%" width="100%">
				<s:HGroup  height="100%" width="100%">
					<s:Form>
						<s:FormItem label="Nome">
							<s:TextInput id="tiNome" text="{portalController.portalEmEdicao.nome}"/>					
						</s:FormItem>
						
						<s:FormItem label="Cidade">
							<s:TextInput id="tiMunicipio" text="{portalController.portalEmEdicao.municipio.nome}"/>
						</s:FormItem>
						
						<s:FormItem label="UF">
							<s:ComboBox id="cbUF" dataProvider="{portalController.ufDataProvider}" selectedIndex="-1"/>
						</s:FormItem>
					</s:Form>
					
					<s:Form>
						<s:FormItem label="Altitude">
							<s:TextInput id="tiAltitude" text="{portalController.portalEmEdicao.altitude}"/>
						</s:FormItem>
						
						<s:FormItem label="Latitude">
							<s:TextInput id="tiLatitude" text="{portalController.portalEmEdicao.latitude}"/>
						</s:FormItem>
						
						<s:FormItem label="Longitude">
							<s:TextInput id="tiLongitude" text="{portalController.portalEmEdicao.longitude}"/>
						</s:FormItem>
					</s:Form>
					
					<s:VGroup height="100%" width="100%">
						<s:Label text="Equipamentos"/> 
						
						<mx:DataGrid id="dgEquipamentos" height="100%" width="100%" dataProvider="{portalController.portalEmEdicao.equipamento}">
							<mx:columns>
								<mx:DataGridColumn dataField="nome" headerText="Nome"/>								
								<mx:DataGridColumn dataField="sentido" headerText="Sentido" labelFunction="SentidoEnum.sentidoDataGridLabelFunction"/>								
								<mx:DataGridColumn headerText="Ações" width="50">
									<mx:itemRenderer>
										<fx:Component>
											<mx:HBox paddingLeft="5">
												<s:Image   source="@Embed('assets/excluirIcon.png')"  click="dispatchEvent(new Event('removerEquipamento', true))"/>
											</mx:HBox>
										</fx:Component>
									</mx:itemRenderer>
								</mx:DataGridColumn>
							</mx:columns>
						</mx:DataGrid>
					</s:VGroup>
					
					<s:VGroup y="{dgEquipamentos.y}">
						<s:Button id="btAdicionarEquipamento" label="Adicionar Equipamento" click="novoEquipamento(event)"/>
					</s:VGroup>
					
					<s:Spacer width="100"/>
					
					<s:VGroup height="100%">
						<s:Button id="btSalvar" label="Salvar"  click="salvarEdicao(event)"/> 
						<s:Button id="btCancelar" label="Cancelar" click="cancelarEdicao()"/>
					</s:VGroup>
					
				</s:HGroup>
				
			</s:NavigatorContent>
			
			<s:NavigatorContent id="equipamento" height="100%" width="100%">
				<view:AdicionarEquipamentosView id="edicaoEquipamento" voltar="cancelarEdicaoEquipamento(event)" portalDoEquipamento="{portalController.portalEmEdicao}" adicionarEquipamento="adicionarEquipamento(event)"/>				
			</s:NavigatorContent>
			
			<s:NavigatorContent id="ncNovoPortal" width="100%" height="100%">
				<s:VGroup>
					<s:Label text="Selecione no mapa o ponto em que deseja adicionar um portal."/>
					<s:Button id="btCancelarNovoPortal" label="Cancelar" click="cancelarNovoPortal(event)"/>
				</s:VGroup>
			</s:NavigatorContent>			
			
			
		</mx:ViewStack>
	</mx:VDividedBox>
</s:Group>