<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"  height="100%" width="100%" xmlns:mygoogle="mygoogle.*">
	
	<fx:Script>
		<![CDATA[
			import com.google.maps.MapMouseEvent;
			import com.google.maps.services.ClientGeocoder;
			import com.google.maps.services.GeocodingEvent;
			import com.google.maps.services.Placemark;
			
			import controller.IncluirPortalController;
			
			import entity.Equipamento;
			import entity.Municipio;
			import entity.Portal;
			import entity.UF;
			
			import mx.binding.utils.BindingUtils;
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.core.EventPriority;
			import mx.core.INavigatorContent;
			
			import mygoogle.MarkerPortal;
			import mygoogle.events.MapaEvent;
			
			import util.UFUtil;
			
			[Bindable]
			private var portalController:IncluirPortalController = new IncluirPortalController(); //FAZER UMA INTERFACE CONTROLLER;
			
			[Bindable]
			private var portalEmEdicao:Portal;
			
			private var geocoder:ClientGeocoder;
			
			private var emEdicao:Boolean = false;
			
			
			
			protected function mapaProntoHandler(event:MapaEvent):void
			{
				dgPortais.addEventListener("editarItem",editarItem);
				mapa.map.addEventListener(MapMouseEvent.CLICK,onMapClick, false, EventPriority.DEFAULT, true);
				
				geocoder = new ClientGeocoder();
				geocoder.addEventListener(GeocodingEvent.GEOCODING_SUCCESS,sucessoGeocode);				
				geocoder.addEventListener(GeocodingEvent.GEOCODING_FAILURE,falhaGeocode);
				
			}
			
			protected function onMapClick(event:MapMouseEvent):void
			{
				
				if(!emEdicao)
				{
					var portal:Portal = new Portal();
					portal.equipamento = new ArrayCollection();
					portal.latLng = event.latLng;
					editarPortal(portal);
				}
				else
				{
					Alert.show("Não é possível adicionar um portal enquanto estiver no modo edição");
				}
				
			}
			
			protected function editarPortal(portal:Portal):void
			{
				emEdicao = true;
				
				portalController.portalEmEdicao = portal; 
				geocoder.geocode(portalController.portalEmEdicao.latLng.toString());
				
				vsPortal.selectedChild = INavigatorContent(vsPortal.getChildByName("edicao"));	
			}
			
			
			
			
			protected function sucessoGeocode(event:GeocodingEvent):void
			{
				var municipioGeocodificado:Municipio = new Municipio();
				var placemark:Placemark = Placemark(event.response.placemarks[0]);
				
				if(placemark.addressDetails.hasOwnProperty("Country"))
				{
					var country:Object = placemark.addressDetails.Country;
					if(country.hasOwnProperty("AdministrativeArea"))
					{
						var administrativeArea:Object = country.AdministrativeArea;
						var uf:UF = new UF();
						uf.sigla = administrativeArea.AdministrativeAreaName;
						municipioGeocodificado.uf = uf;
						portalController.portalEmEdicao.municipio = municipioGeocodificado;
						if(administrativeArea.hasOwnProperty("Locality"))
						{
							var locality:Object = administrativeArea.Locality;
							municipioGeocodificado.nome = locality.LocalityName;
							portalController.portalEmEdicao.municipio = municipioGeocodificado;
						}
					}
				}
			}
			
			
			protected function falhaGeocode(event:GeocodingEvent):void
			{
				Alert.show("Erro ao geocodificar localização");
			}
			
			
			protected function editarItem(e:Event):void
			{
				editarPortal(Portal(dgPortais.selectedItem));
			}
			
			
			protected function sairEdicao():void
			{
				portalEmEdicao = null;
				emEdicao = false;
				vsPortal.selectedChild = INavigatorContent(vsPortal.getChildByName("exibicao"));
			}
			
			protected function salvarEdicao(event:MouseEvent):void
			{
				portalController.portalEmEdicao.nome = tiNome.text;
				portalController.portalEmEdicao.altitude = parseFloat(tiAltitude.text);
				
				if(portalController.portalEmEdicao.municipio == null) //CRIAR VARIÁVEL 'ALTEROU_MUNICIPIO' NO CHANGE DA COMBO/TEXT_INPUT DO MUNICIPIO
				{
					var municipio:Municipio = new Municipio();
					municipio.nome = tiMunicipio.text;
					
					var uf:UF = new UF();
					uf.sigla = tiUF.text;
					
					municipio.uf = uf;
					
					portalController.portalEmEdicao.municipio = municipio;
					
				}
				
				mapa.map.addOverlay(new MarkerPortal(portalController.portalEmEdicao.latLng));
				portalController.salvarPortal();
				sairEdicao();
			}
			
			protected function adicionarEquipamento(event:MouseEvent):void
			{
				var equipamento: Equipamento = new Equipamento(portalController.portalEmEdicao.equipamento.length+1,1);
				
				portalController.portalEmEdicao.equipamento.addItem(equipamento);		
			}
			
			protected function removerEquipamento(event:MouseEvent):void
			{
				Alert.show(dgEquipamentos.selectedIndex.toString());	
				//Alert.show(UFUtil.getDataProvider().getItemAt(0).toString());
			}
			
		]]>
	</fx:Script>
	
	
	<s:VGroup height="100%" width="100%">
		
		<mygoogle:Mapa id="mapa" height="100%" width="100%" mapaPronto="mapaProntoHandler(event)"/>
		
		<mx:ViewStack id="vsPortal">
			
			<s:NavigatorContent id="exibicao">
				<s:HGroup id="parteDeBaixo">
					<s:HGroup>
						<s:Form>
							<s:FormItem label="Latitude">
								<s:TextInput id="tiInputLat"/>
							</s:FormItem>
							<s:FormItem label="Longitude">
								<s:TextInput id="tiInputLng"/>
							</s:FormItem>
						</s:Form>
						<s:VGroup paddingTop="25">
							<s:Button id="btIr" label="Ir"/>
							<s:CheckBox id="cbAdcionar" label="Adicionar Portal"/>
						</s:VGroup>
					</s:HGroup>
					
					<s:Spacer width="200"/> 
					
					<mx:DataGrid id="dgPortais"  doubleClickEnabled="true" dataProvider="{portalController.portais}"
								 width="100%">
						<mx:columns>
							<mx:DataGridColumn dataField="nome" headerText="Nome"/>
							<mx:DataGridColumn dataField="latitude" headerText="Latitude"/>
							<mx:DataGridColumn dataField="longitude" headerText="Longitude"/>	
							<mx:DataGridColumn headerText="Editar">
								<mx:itemRenderer>
									<fx:Component>
										<mx:HBox paddingLeft="5">
											<s:Button  width="20" click="dispatchEvent(new Event('editarItem', true))"/>
										</mx:HBox>
									</fx:Component>
								</mx:itemRenderer>
							</mx:DataGridColumn>
						</mx:columns>
					</mx:DataGrid>
				</s:HGroup>
			</s:NavigatorContent>
			
			<s:NavigatorContent id="edicao">
				<mx:HBox>
					<s:Form>
						<s:FormItem label="Nome">
							<s:TextInput id="tiNome" text="{portalController.portalEmEdicao.nome}"/>					
						</s:FormItem>
						
						<s:FormItem label="Cidade">
							<s:TextInput id="tiMunicipio" text="{portalController.portalEmEdicao.municipio.nome}"/>
						</s:FormItem>
						
						<s:FormItem label="UF">
							<s:TextInput id="tiUF" text="{portalController.portalEmEdicao.municipio.uf.sigla}"/>
						</s:FormItem>
					</s:Form>
					
					<s:Form>
						<s:FormItem label="Altitude">
							<s:TextInput id="tiAltitude" text="{portalController.portalEmEdicao.altitude}"/>
						</s:FormItem>
						
						<s:FormItem label="Latitude">
							<s:TextInput id="tiLatitude" text="{portalController.portalEmEdicao.latitude}"/>
						</s:FormItem>
						
						<s:FormItem label="Longitude">
							<s:TextInput id="tiLongitude" text="{portalController.portalEmEdicao.longitude}"/>
						</s:FormItem>
					</s:Form>
					
					<s:VGroup>
						<s:Label text="Equipamentos"/> 
						
						<mx:DataGrid id="dgEquipamentos" dataProvider="{portalController.portalEmEdicao.equipamento}" editable="true">
							<mx:columns>
								<mx:DataGridColumn dataField="nome" headerText="Nome"/>								
								<mx:DataGridColumn dataField="ordem" headerText="Ordem"/>								
								<mx:DataGridColumn dataField="status" headerText="Status"/>
							</mx:columns>
						</mx:DataGrid>
					</s:VGroup>
					
					<s:VGroup y="{dgEquipamentos.y}">
						<s:Button id="btAdicionarEquipamento" label="Adicionar Equipamento" click="adicionarEquipamento(event)"/>
						<s:Button id="btRemoverEquipamento" label="Remover Equipamento" click="removerEquipamento(event)"/>
					</s:VGroup>
					
					<s:Spacer width="100"/>
					
					<s:VGroup height="100%">
						<s:Button id="btSalvar" label="Salvar" height="50%" click="salvarEdicao(event)"/> 
						<s:Button id="btCancelar" label="Cancelar" height="50%" click="sairEdicao()"/>
						
					</s:VGroup>
					
				</mx:HBox>
				
			</s:NavigatorContent>
			
			
		</mx:ViewStack>
		
		
		
		
		
	</s:VGroup>
</s:Group>